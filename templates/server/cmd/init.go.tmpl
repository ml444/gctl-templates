package main

import (
    "github.com/ml444/gkit/log"
    glog "github.com/ml444/glog"
	gconfig "github.com/ml444/glog/config"
    glevel "github.com/ml444/glog/level"
	//"github.com/ml444/gkit/middleware/tracing"

	"{{ GoModule . "project" }}/internal/db"
	"{{ GoModule . "server" }}/conf"
)

func Init(cfg *conf.Config) error {
	var err error

	// setting logger
    err = InitLogger(cfg)
	if err != nil {
		log.Errorf("err: %v", err)
		return err
	}

	// init db
	err = db.InitDB(cfg.DBCfg, cfg.Debug)
	if err != nil {
		log.Errorf("err: %v", err)
		return err
	}

	// init tracer
	//err = tracing.InitTracer(cfg.TracerAddr, log.GetLoggerName())
	//if err != nil {
	//	log.Errorf("err: %v", err)
	//	return err
	//}

	return nil
}


func InitLogger(cfg *conf.Config) error {
	var err error

	// setting logger
	opts := []gconfig.OptionFunc{
		gconfig.SetLoggerName("{{ .Name }}"),
	}
	if cfg.Debug {
		opts = append(opts, gconfig.SetLevel2Logger(glevel.DebugLevel))
	}
	err = glog.InitLog(opts...)
	if err != nil {
		log.Errorf("err: %v", err)
		return err
	}
	log.SetLogger(glog.GetLogger())

	return nil
}